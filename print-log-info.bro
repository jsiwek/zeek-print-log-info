# Prints out field descriptions of all logs generated by Bro/Zeek.
# This requires a version of Bro/Zeek with the improvements from:
# https://github.com/bro/bro/commit/1f450c05102be6dd7ebcc2c5901d5a3a231cd675
# (Was not included in 2.6 release)

@load broxygen

option log_desc_file = fmt("bro-%s.%s-log-descs.txt",
                           Version::info$major, Version::info$minor);

event bro_done() &priority = -100
	{
	print "==========================================================";
	print "Bro log description output to file", log_desc_file;
	print "==========================================================";
	}

event bro_init() &priority = -100
	{
	local f = open(log_desc_file);
	local path_to_id_map: table[string] of Log::ID = table();
	local paths: vector of string = vector();
	local stream: Log::Stream;
	local id: Log::ID;

	for ( id in Log::active_streams )
		{
		stream = Log::active_streams[id];

		if ( ! stream?$path )
			next;

		path_to_id_map[stream$path] = id;
		paths += stream$path;
		}

	sort(paths, strcmp);

	for ( i in paths )
		{
		id = path_to_id_map[paths[i]];
		stream = Log::active_streams[id];

		local log_file = fmt("%s.log", stream$path);
		local fields = record_fields(stream$columns);
		local info_id = cat(stream$columns);
		local field_names = record_type_to_vector(info_id);

		print f, log_file;

		for ( idx in field_names )
			{
			local field = field_names[idx];
			local field_props = fields[field];

			if ( ! field_props$log )
				next;

			local fq_field = fmt("%s$%s", info_id, field);
			local field_desc = get_record_field_comments(fq_field);
			field_desc = gsub(field_desc, /\x0a/, " ");
			local period_idx = strstr(field_desc, ".");

			if ( period_idx != 0 )
				field_desc = field_desc[0:period_idx];

			if ( |field_desc| > 0 && /[[:alnum:]]/ !in field_desc[0] )
				field_desc = "";

			print f, fmt("  %s: %s - %s", field, field_props$type_name, field_desc);
			}

		print f, "";
		}
	}
